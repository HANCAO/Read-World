#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Read_World
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ReadWorld")]
	public partial class BooksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertBooks(Books instance);
    partial void UpdateBooks(Books instance);
    partial void DeleteBooks(Books instance);
    #endregion
		
		public BooksDataContext() : 
				base(global::Read_World.Properties.Settings.Default.ReadWorldConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BooksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BooksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BooksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BooksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Books> Books
		{
			get
			{
				return this.GetTable<Books>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books")]
	public partial class Books : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BID;
		
		private System.Data.Linq.Binary _BCover;
		
		private string _BName;
		
		private string _BAuthor;
		
		private System.Nullable<System.DateTime> _BPubDate;
		
		private System.Nullable<int> _BPages;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBIDChanging(string value);
    partial void OnBIDChanged();
    partial void OnBCoverChanging(System.Data.Linq.Binary value);
    partial void OnBCoverChanged();
    partial void OnBNameChanging(string value);
    partial void OnBNameChanged();
    partial void OnBAuthorChanging(string value);
    partial void OnBAuthorChanged();
    partial void OnBPubDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBPubDateChanged();
    partial void OnBPagesChanging(System.Nullable<int> value);
    partial void OnBPagesChanged();
    #endregion
		
		public Books()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BID", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BID
		{
			get
			{
				return this._BID;
			}
			set
			{
				if ((this._BID != value))
				{
					this.OnBIDChanging(value);
					this.SendPropertyChanging();
					this._BID = value;
					this.SendPropertyChanged("BID");
					this.OnBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BCover", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BCover
		{
			get
			{
				return this._BCover;
			}
			set
			{
				if ((this._BCover != value))
				{
					this.OnBCoverChanging(value);
					this.SendPropertyChanging();
					this._BCover = value;
					this.SendPropertyChanged("BCover");
					this.OnBCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BName", DbType="VarChar(32)")]
		public string BName
		{
			get
			{
				return this._BName;
			}
			set
			{
				if ((this._BName != value))
				{
					this.OnBNameChanging(value);
					this.SendPropertyChanging();
					this._BName = value;
					this.SendPropertyChanged("BName");
					this.OnBNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAuthor", DbType="VarChar(16)")]
		public string BAuthor
		{
			get
			{
				return this._BAuthor;
			}
			set
			{
				if ((this._BAuthor != value))
				{
					this.OnBAuthorChanging(value);
					this.SendPropertyChanging();
					this._BAuthor = value;
					this.SendPropertyChanged("BAuthor");
					this.OnBAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPubDate", DbType="Date")]
		public System.Nullable<System.DateTime> BPubDate
		{
			get
			{
				return this._BPubDate;
			}
			set
			{
				if ((this._BPubDate != value))
				{
					this.OnBPubDateChanging(value);
					this.SendPropertyChanging();
					this._BPubDate = value;
					this.SendPropertyChanged("BPubDate");
					this.OnBPubDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPages", DbType="Int")]
		public System.Nullable<int> BPages
		{
			get
			{
				return this._BPages;
			}
			set
			{
				if ((this._BPages != value))
				{
					this.OnBPagesChanging(value);
					this.SendPropertyChanging();
					this._BPages = value;
					this.SendPropertyChanged("BPages");
					this.OnBPagesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
